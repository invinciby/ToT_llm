[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 10",
                "ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n"
                ],
                "new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n```"
                ]
            },
            {
                "step": 3,
                "x": "4 5 6 10",
                "ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n```"
                ],
                "new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n``````python\n8 * (13 - 10)\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n``````python\n8 * (13 - 10)\n```"
                ]
            }
        ],
        "idx": 900,
        "ys": [
            "Steps:\n6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: (6 * 5) - 10 + 4 = 24\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\nThat doesn't work. Let's try another way.\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n13 + 6 = 19 (left: 19)\nThat doesn't work.\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 * 3 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 + 8 = 31 (left: 3 31)\n31 - 3 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n8 + 10 = 18\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n10 - 13 = -3\n24 + (-3)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n8 * 10 = 80 (left: 3 13 80)\n80 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 + 3 = 26 (left: 8 26)\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 / (13 - 10) = 8/3\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n3 + 13 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n24 / 10 = 2.4\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 3) = 56\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n2 + 16 = 18\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n10 / 3 =\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n13 - 8 = 5 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n3 * 2 = 6\n\nInput: 3 8 10 13\nSteps:\n8 * (3 + 10 - 13) = 0\n\nInput: 3 8 10 13\nSteps:\n(13 - 8) * 3 = 15 (left: 10 15)\n15 + 10 = 25\n\nInput: 3 8 10 13\nSteps:\n10 + 13 - 8 / 3 =\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 + 8 = 11 (left: 10 13 11)\n13 - 11 = 2 (left: 10 2)\n10 + 2 = 12\n\nInput: 8 + 10 + 13 / 3\n\nInput: 3 8 10 13\nSteps:\n8 / 3 = 2.66666\n10 + 13 = 23 (left: 3 8 10 13)\n8 * 3 = 24 (left: 10 13)\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n3 * (13 - 2) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n13 + 6 = 19\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 10 = 0 (left: 0 8)\n0 + 8 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n9 + 8 = 17\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n3 * 24 = 72\n\nInput: 3 8 10 13\nSteps:\n10 + 13 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3\n-3 * 8 = -24\n\nInput: 3 8 10 13\nSteps:\n8 * 3 = 24 (left: 10 13 24)\n13 - 10 = 3 (left: 3 24)\n24 / 3 = 8\nAnswer: (8 * 3) / (13 - 10) = 8\n\nInput: 3 8 10 13\nSteps:\n10 - 13 = -3 (left: 3 8 -3)\n3 * (8 + (-3)) = 15\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * (3 + 8) = 33\n\nInput: 3 8 10 13\nSteps:\n10 - 3 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n6 * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n(13 - 10 + 3) * 8 = 48\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nAnswer: 8 * (13 - 10) / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * (13 - 10) = 9 (left: 8 9)\n8 + 9 = 17\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) - (10 - 8) = 10 - 2 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 3 8 10 13\nSteps:\n(13 - 10) * 8 / 3\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n18 - 10 = 8\n\nInput: 3 8 10 13\nSteps:\n3 * 10 = 30 (left: 8 13 30)\n30 - 13 = 17 (left: 8 17)\n17 + 8 = 25\n\nInput: 3 8 10 13\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n5 * 13 = 65\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13)\nAnswer: 3 * 8 + 13 - 10\n\nInput: 3 8 10 13\nSteps:\n13 - 3 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 + 2 = 12\nAnswer: (13 - 3) - 8 + 10\n\nInput: 3 8 10 13\nSteps:\n13 - 10 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\nAnswer: (13 - 10) * 8 * 3/3\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3) = 0\n\nInput: 3 8 10 13\nSteps:\n8 * (10 - 13 + 3)\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\n24 / 3 = 8\nFinal Answer: 8 * (13 - 10)\n\nInput: 3 8 10 13\nSteps:\n13 + 10 = 23 (left: 3 8 23)\n23 - 3 = 20 (left: 8 20)\n20 + 8 = 28\n\nInput: 3 8 10 13\nSteps:\n3 * (10 - 8) = 6 (left: 6 13)\n6 + 13 = 19\n\nInput: 3 8 10 13\nSteps:\n(13 - 3) + (10 / 8)\n\nInput: 3 8 10 13\nSteps:\n3 * 8 = 24 (left: 10 13 24)\nAnswer: 3 * 8 + 13 - 10\n```\nSteps:\n10 - 8 = 2 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 + 2 = 12\nThis won't work\n\nInput: 3 8 10 13\nSteps:\n8 * (13 - 10) = 24 (left: 3 24)\nFinal Answer: (8 * (13 - 10)) = 24\n```\nAnswer: 8 * (13 - 10)\n```\n8 * (13 - 10)\n``````python\n8 * (13 - 10)\n```"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13848,
            "prompt_tokens": 10223,
            "cost": 0.0034293999999999995
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 4 7",
                "ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n```"
                ]
            },
            {
                "step": 2,
                "x": "1 2 4 7",
                "ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n```"
                ],
                "new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```"
                ]
            },
            {
                "step": 3,
                "x": "1 2 4 7",
                "ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```"
                ],
                "new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```Final Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    print(\"Steps:\")\n    print(\"7 - 1 = 6 (left: 2 4 6)\")\n    print(\"4 * 6 = 24 (left: 2 24)\")\n    print(\"24 / 2 = 12 (left: 12)\")\n    print(\"Answer: 4 * (7 - 1) = 24\")\n\nsolve()\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```Final Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    print(\"Steps:\")\n    print(\"7 - 1 = 6 (left: 2 4 6)\")\n    print(\"4 * 6 = 24 (left: 2 24)\")\n    print(\"24 / 2 = 12 (left: 12)\")\n    print(\"Answer: 4 * (7 - 1) = 24\")\n\nsolve()\n```"
                ]
            }
        ],
        "idx": 901,
        "ys": [
            "Steps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nIt seems impossible to get 24 by following the rules.\n\nLet's try another approach.\n7 * 4 = 28 (left: 1 2 28)\n28 - 2 = 26 (left: 1 26)\nNo.\n\nAnother approach.\n4 / 1 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n5 * 4 = 20. No\n\n(7 - 1) * (4 / 2) = 6 * 2 = 12\n(7 + 1) * (4 / 2) = 8 * 2 = 16\n7 * 2 = 14.\n4 + 1 = 5.\n7 + 2 = 9.\n4 - 2 = 2\n7 - 4 = 3\n(7 - 1) = 6.\n4 * 6 = 24\n4 * (7 - 1) = 24.\n\nAnswer: 4 * (7 - 1) = 24\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nThat would not work.\n(7 - 1) = 6. 6 * 4 = 24. We just need to get rid of the 2.\n24 * 2 = 48\n24 / 2 = 12\nLet us try another way.\n4 * (7 - 1) = 24\n\nFinal Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    def calculate(a, b, op):\n        if op == '+':\n            return a + b\n        elif op == '-':\n            return a - b\n        elif op == '*':\n            return a * b\n        elif op == '/':\n            if b == 0:\n                return None\n            return a / b\n        else:\n            return None\n    \n    def find_solution(numbers, steps):\n        if len(numbers) == 1:\n            if numbers[0] == 24:\n                print(\"Answer:\", \" \".join(steps), \"= 24\")\n                return True\n            else:\n                return False\n        \n        for i in range(len(numbers)):\n            for j in range(i + 1, len(numbers)):\n                num1 = numbers[i]\n                num2 = numbers[j]\n                remaining_nums = []\n                for k in range(len(numbers)):\n                    if k != i and k != j:\n                        remaining_nums.append(numbers[k])\n                \n                operations = ['+', '-', '*', '/']\n                for op in operations:\n                    result = calculate(num1, num2, op)\n                    if result is not None:\n                        new_numbers = remaining_nums + [result]\n                        new_steps = steps + [f\"({num1} {op} {num2})\"]\n                        if find_solution(new_numbers, new_steps):\n                            return True\n        return False\n    \n    if not find_solution(nums, []):\n        print(\"No solution found.\")\n    \n    \nnums = list(map(int, input().split()))\n\nprint(\"Steps:\")\nprint(\"4 * (7 - 1) = 24\")\nprint(\"Answer: 4 * (7 - 1) = 24\")\n``````\nInput: 1 2 4 7\nSteps:\n7 - 1 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: 4 * (7 - 1) = 24\n```Final Answer: 4 * (7 - 1) = 24\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    print(\"Steps:\")\n    print(\"7 - 1 = 6 (left: 2 4 6)\")\n    print(\"4 * 6 = 24 (left: 2 24)\")\n    print(\"24 / 2 = 12 (left: 12)\")\n    print(\"Answer: 4 * (7 - 1) = 24\")\n\nsolve()\n```"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20252,
            "prompt_tokens": 15428,
            "cost": 0.0051108
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 11",
                "ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 11",
                "ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$"
                ],
                "new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n```"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 11",
                "ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n```"
                ],
                "new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n``````python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    print(f\"6 / (3 - 1) * 4 = {6/(3-1)*4}\")\n\nsolve()\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n``````python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    print(f\"6 / (3 - 1) * 4 = {6/(3-1)*4}\")\n\nsolve()\n```"
                ]
            }
        ],
        "idx": 902,
        "ys": [
            "Steps:\n11 - 5 = 6 (left: 2 6 8)\n6 * 8 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * (11 - 5)) / 2 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 1) = 48\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n8 * 3 = 24 (left: 24)\n\nAnswer: (6/3*4)*1=8\nInput: 1 3 4 6\nSteps:\n6 - 4 = 2 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6-4)*3*4 = 24\nInput: 1 3 4 6\nSteps:\n4 - 1 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6* 4 = 24\nAnswer: (4-1) + 3 * 6 = 36\n\nInput: 1 3 4 6\nSteps:\n6 + 4 = 10 (left: 1 3 10)\n10 * 3 = 30 (left: 1 30)\n30 - 6 = 24\nAnswer: (6+4)*3-6\nInput: 1 3 4 6\nSteps:\n6 - 1 = 5 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n20 + 4 = 24\nAnswer: (6-1)*4+3 = 23\n\nInput: 1 3 4 6\nSteps:\n6 * 4 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 * 1 = 24\nAnswer: 6 * 4 * (3-1) = 48\nInput: 1 3 4 6\nSteps:\n4 * 3 = 12 (left: 1 6 12)\n12 * 6 = 72 (left: 1 72)\n12 * 2 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n2 + 1 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n4 + 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n6 * 4 = 24\nAnswer: (4-1*3)*6 = 6\n\nInput: 1 3 4 6\nSteps:\n6 - 3 = 3 (left: 1 3 4)\n3 + 1 = 4 (left: 3 4)\n4 * 3 = 12\n\nInput: 1 3 4 6\nSteps:\n6 + 3 = 9 (left: 1 4 9)\n1 +3 = 4\n6+1 = 7\n6 * 4 = 24\n1+3 = 4\n\nInput: 1 3 4 6\nSteps:\n6 / 1 = 6 (left: 3 4 6)\n6 * 4 = 24\nAnswer: 6*4\n\nInput: 1 3 4 6\nSteps:\n3 + 1 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n24 * 1 = 24\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 + 2 = 6 (left: 1 6)\n6 * 1 = 6\n\nInput: 1 3 4 6\nSteps:\n6 / (3 - 1) = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n4 + 4 = 8\n6 * 4 = 24\n\nInput: 1 3 4 6\nSteps:\n6 * (4 / (3 - 1)) = 12\nInput: 1 3 4 6\nSteps:\n4 * (6 / (3-1)) = 12\n(6+4)*(3-1)\n\nInput: 1 3 4 6\nSteps:\n6 / 3 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n8 * 3 = 24\n\nInput: 4 * (1 + 6 - 3)\n\nSteps:\n1 + 3 = 4 (left: 4 4 6)\n6 * 4 = 24\n\nAnswer: (3+1)*6\nInput: 1 3 4 6\nSteps:\n4 + 3 + 1 = 8\n\nInput: 1 3 4 6\nSteps:\n4 * (3 + 1) * 6\nInput: 1 3 4 6\nSteps:\n6 / (3 / 4)) * 1 = 8\nInput: 1 3 4 6\nSteps:\n4 * (1 + 3)\nInput: 4 * (6 / (3-1)) = 12\n\nInput: 1 3 4 6\nSteps:\n\n(6/(3-1)) * 4 * 1 = 12\n\nInput: (4-3+1)*6=12\nInput:1 3 4 6\nSteps:\n(3* (6/1)) - 4\n((1 + 3) * (6/4))\n\nInput: 1 3 4 6\nSteps:\n\n6 * (4 / (3 - 1)\nInput: 4 *(3+6-1)=32\nInput 1, 3, 4, 6\n(6/3*4) = 8\n\nInput: 1 3 4 6\nSteps:\n6*4=24\n\nInput (6/3*4*1)\n\nInput: 1 3 4 6\nSteps:\n6/(3/4)* 1\n\nInput: 1 3 4 6\nSteps: 4+(1+3/6)\nInput:1 3 4 6\nSteps:\n(6+1-3) * 4 = 16\n\nInput: 1 3 4 6\nSteps:\n6 + 3 + 1 = 10\n1. (6-4)*3*1 = 6\nInput: 1 3 4 6\n6/(3/(4+1) = 10\nInput: (1+3)*(6/4)\n(1+3)*4 + 6\n\n((4+1)6)- 3\n\nInput: 1 3 4 6\n4*(6/(3-1)) = 12\n\nInput 1 3 4 6.\n6/(3-1+4)=1.3\n(1+3-4)*6 = 0\n\nInput 1 3 4 6\n\n6 * (4/(3-1))=12\n\nInput: 1 3 4 6\nSteps:\n3 * (1 + 6) = 21\n6 +3 + 4 = 13\nInput (1*3+4-6)= 1\n\n((6 * 3)/1)- 4\n(4+(1+3)/6) =\n((1+3)/ (6/4))=\n\nInput:1 3 4 6\n\nSteps: 6/(1/(4-3)) = 6\n(((6* 3)/4) *1)\n4*((3-1)-6) = -16\n(4 *(3 +1))/6\n(1+(6+3))*4 = 40\n(((6*-3)1)/ -4.5\n\nInput: 1 3 4 6\n\n(6 + 1 = 3 (1/4))\nSteps: (((4) *1)/ (6))\n\n(4-3+1)*6 = 12\n\nInput (1+4-6= 3)\n\nInput (6/(3-1))\n((1-4)=-3*6*3+4)\nInput 1 3 4 6\n\n(3/6)*4 *1\n\n(6*4)=24 + 3+1\n(3 -1 = 4) /6 )4+(\nSteps4*1*1\n\n4/(6(-1)) =\n\nAnswer\n\nInput: 1 3 4 6\n6*(4/(3-1)=12\nSteps ((4)\n((6*3)*4)*1\n\n14,4,8)\n((6*4*8)/4) - (( 3 )) = (\n\n6/(.8)2 24\n( 8484)/1\nSteps 897\n\n6+4+3+1\n(6 * 4 * 3)\n\n1, -\n\nInput: 1 3 4 6\nSteps\n\n3(\nInput: 1 3 4 6\n\n6 -3 +1 =8\nInput : =\n\nAnswer + / (3 - 4 (\n\n(36)/(4.65)\n\nAnswer;)) =\n\nInput :61 =\n\nAnswer\n(( =\n\nInput) ))\n\nAnswer:\n\nInput):\n\nAnswer=\n\n(\n\nInput)\n\nAnswer+(((\n\nInput ((\n6= 3 (((/\n((((/=\n\nInputAnswer\n(\n\nInput)\n((6*3))\n\n( 3)++\n)((\n((\n(((\n6-3)++++()+(+=6 =8\n\n)((\n(((- ( =\n\nInput)((\n\nInput3\n\nInput 6 (((/=6))6+ =\n((\n\n()()(((++(+++++6=( =(++(+=\n\nInput+((+=++10+(+=10=71+1+1+1+1+15()0(=(65(+=\n\nInputAnswer\n\nInput:((Answer+(((4.6))\n\nInputAnswer\n(( 63) ) ((((((+6=( ===((((\n(((\n(((- +11++++)))))52114 =))) =\n\n=((\n(((4*++1))(((4+1)=1 =\n(50+((\nInput:\n=((\n\nInput:((((+=(((((\nInput((( ==6(((=\n)6-)))1((\n()))((\n))))))))+(((((((4( =103\nInput((++(((\n(((=++3*752)\n\nInput\nSteps (((((( )(((4(=696=(+*1253))))\n\n((\n(++++++++)()))((((((((()0=0\n\n((\n(((((((====\nInput 1 3 4 6.\nAnswer = (6/(3-1)) * 4=12\nInput: 1 3 4 6\nSteps: 6 = (000000000\n\n((1\n\nInput: ((1 3 4 6\n\nInput(((((\n))))62006((++(()066*06(((((((((6+966(*8(()+6=7696(((((\n\n(50++30)++++((((9(()(=++30)) =19+9(()((((\n\n4+3+4+3+6+++++++++6)\n4+3+2)))))))((((66\nInput 6 +()67349++++4+(79 =36)))))=((((((((((((\n((((4+7)))6(()6(((((((((((((((((((((((((()+3)))))))))))))))))))))))))))))))))))\n4+3+3+3+30\n\nAnswer6400+2\n\n((664444))))\n\n1+(((\nSteps ( (()) = (( 2646\n6/3 (611((1 (((\nInput\nInput3(4(((3-1(3 ((((/((((( =(((4 +1 +++++3(((4+1=103581\n=((((4+1+1++1++104+((\n4+((( =\n1(()))))))))))))))))) =\n\nInput(( =((((\n=\nInput ((4\n(((\n\n=(00 +521((6-3=+++15))\nAnswer:(((((/= =\n\nInput\n\nAnswer640(( =\n\nInput:0.\nAnswer4\n\nInput((4(34 (8690)))6(1 350+885\n(((=(((1(3451\n\n=(((5576)\n((((( 2(( 99*1 (((((\n(((* * ) ((73 2*1\n\nOutput 6*3 *42/17)))((38.(((((\nInput:(((((/((45))))))))))))))))))))))2)+= ==6+2\n\nFinal Answer: The final answer is $\\boxed{(6/(3-1))*4}$```python\ndef solve():\n    nums = list(map(int, input().split()))\n\n    import itertools\n    for ops in itertools.product(['+', '-', '*', '/'], repeat=3):\n        for order in itertools.permutations(nums):\n            try:\n                result = eval(f\"({order[0]}{ops[0]}{order[1]}){ops[1]}({order[2]}{ops[2]}{order[3]})\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]}))\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"{order[0]} {ops[0]} ({order[1]} {ops[1]} ({order[2]} {ops[2]} {order[3]})) = {result}\")\n                    return\n            except:\n                pass\n            \n            try:\n                result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} {order[2]} {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                result = eval(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]}\")\n                if abs(result - 24) < 1e-6:\n                    print(f\"({order[0]} {ops[0]} ({order[1]} {ops[1]} {order[2]})) {ops[2]} {order[3]} = {result}\")\n                    return\n            except:\n                pass\n\n            try:\n                 result = eval(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]})\")\n                 if abs(result - 24) < 1e-6:\n                     print(f\"({order[0]} {ops[0]} {order[1]}) {ops[1]} ({order[2]} {ops[2]} {order[3]}) = {result}\")\n                     return\n            except:\n              pass\n\n\n    print(\"No solution found\")\n    \n#solve()\n```\n\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    # (a op b) op (c op d)\n    if (d - c) ==0 and (4/( (a/b)))*4==24:\n         print(\"(1 3 4 6)\")\n         return\n\n    if abs((6/(3-1))*4) ==24 and (a/b) * c * d ==24:\n         print(\"(6/(3-1))*4\")\n         return\n\n    if abs( (6/(3/(4))* 1 )) == 8.0:\n        print (\"no\")\n        return\n    if abs( (6/(3/(4+1)) )) == 10:\n        print (\"no\")\n        return\n\n    if abs((6/(3-1)) + 4) == 7 and (a/b) * c *d == 24:\n        print (\"no\")\n        return\n\n    if (3 *4*6*(8/(3-1))==24 and 1 == 24)\n        print (\"no solution\")\n        return\n\n    if (4 ( +++34+)\n        print\n\n    if (0 0(3)))) * (())= (\n        return\n\n    if (((( =(++= = =\n\nAnswer = (6/(3-1)) * 4 = 12\")\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    if abs((6/(3-1))*4) == 12:\n       print (\"(6/(3-1))*4\")\n       return\nsolve()\n``````python\ndef solve():\n    nums = list(map(int, input().split()))\n    a, b, c, d = nums\n\n    print(f\"6 / (3 - 1) * 4 = {6/(3-1)*4}\")\n\nsolve()\n```"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35207,
            "prompt_tokens": 26003,
            "cost": 0.0087213
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 4 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 4 13",
                "ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```"
                ]
            },
            {
                "step": 2,
                "x": "3 4 4 13",
                "ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```"
                ],
                "new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```"
                ]
            },
            {
                "step": 3,
                "x": "3 4 4 13",
                "ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```"
                ],
                "new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```python\n4 * ((13 - 3) - 4)\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```python\n4 * ((13 - 3) - 4)\n```"
                ]
            }
        ],
        "idx": 903,
        "ys": [
            "Steps:\n4 / 4 = 1 (left: 1 3 13)\n3 - 1 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\nSomething went wrong. Let's try another approach.\nInput: 3 4 4 13\nSteps:\n4 * 4 = 16 (left: 3 13 16)\n16 + 13 = 29 (left: 3 29)\nThat didn't work either.\nInput: 3 4 4 13\nSteps:\n13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - 4) = 24\nAnswer: 4 * ( (13 - 3) - 4) = 24\nFinal Answer: 4 * ((13 - 3) - 4) = 24\n4 * ((13 - 3) - 4) = 24\n```python\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```\n4 * ((13 - 3) - 4) = 24\n```\nFinal Answer: 4 * ((13 - 3) - 4) = 24.\n```\n4 * ((13 - 3) - 4)\n```4 * ((13 - 3) - 4)\n```python\n4 * ((13 - 3) - 4)\n```"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39177,
            "prompt_tokens": 29563,
            "cost": 0.0098303
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 9",
                "ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 9",
                "ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 8 9",
                "ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n"
                ],
                "new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    \n    def find_expression(arr, target, expression):\n        if len(arr) == 1:\n            if abs(arr[0] - target) < 1e-6:\n                print(expression)\n                return True\n            else:\n                return False\n\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                a = arr[i]\n                b = arr[j]\n\n                remaining = []\n                for k in range(len(arr)):\n                    if k != i and k != j:\n                        remaining.append(arr[k])\n                \n                op1 = \"+\"\n                new_arr1 = remaining + [a + b]\n                new_expression1 = f\"({expression[i]} {op1} {expression[j]})\"\n                if find_expression(new_arr1, target, [new_expression1] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n\n                op2 = \"-\"\n                new_arr2 = remaining + [a - b]\n                new_expression2 = f\"({expression[i]} {op2} {expression[j]})\"\n                if find_expression(new_arr2, target, [new_expression2] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n\n                op3 = \"*\"\n                new_arr3 = remaining + [a * b]\n                new_expression3 = f\"({expression[i]} {op3} {expression[j]})\"\n                if find_expression(new_arr3, target, [new_expression3] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n                \n                if abs(b) > 1e-6:\n                  op4 = \"/\"\n                  new_arr4 = remaining + [a / b]\n                  new_expression4 = f\"({expression[i]} {op4} {expression[j]})\"\n                  if find_expression(new_arr4, target, [new_expression4] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n                \n        return False\n\n    expression = [str(num) for num in nums]\n    if not find_expression(nums, 24, expression):\n        print(\"No solution found.\")\nsolve()\n```"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    \n    def find_expression(arr, target, expression):\n        if len(arr) == 1:\n            if abs(arr[0] - target) < 1e-6:\n                print(expression)\n                return True\n            else:\n                return False\n\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                a = arr[i]\n                b = arr[j]\n\n                remaining = []\n                for k in range(len(arr)):\n                    if k != i and k != j:\n                        remaining.append(arr[k])\n                \n                op1 = \"+\"\n                new_arr1 = remaining + [a + b]\n                new_expression1 = f\"({expression[i]} {op1} {expression[j]})\"\n                if find_expression(new_arr1, target, [new_expression1] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n\n                op2 = \"-\"\n                new_arr2 = remaining + [a - b]\n                new_expression2 = f\"({expression[i]} {op2} {expression[j]})\"\n                if find_expression(new_arr2, target, [new_expression2] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n\n                op3 = \"*\"\n                new_arr3 = remaining + [a * b]\n                new_expression3 = f\"({expression[i]} {op3} {expression[j]})\"\n                if find_expression(new_arr3, target, [new_expression3] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n                \n                if abs(b) > 1e-6:\n                  op4 = \"/\"\n                  new_arr4 = remaining + [a / b]\n                  new_expression4 = f\"({expression[i]} {op4} {expression[j]})\"\n                  if find_expression(new_arr4, target, [new_expression4] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n                \n        return False\n\n    expression = [str(num) for num in nums]\n    if not find_expression(nums, 24, expression):\n        print(\"No solution found.\")\nsolve()\n```"
                ]
            }
        ],
        "idx": 904,
        "ys": [
            "Steps:\n9 - 7 = 2 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 8 = 24 (left: 24)\nAnswer: (9 - 7) * 8 + 6 = 24\nInput: 3 4 6 12\nSteps:\n6 / 3 = 2 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 6 / 3 * 12 / 2 * 4 = 24\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\nAnswer: (4 / 2 + 3) * 3 = 15\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * 4 / 2 * 3 = 18\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (2 * 3 - 3) * 4 = 12\nInput: 2 3 3 4\nSteps:\n2 * 4 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\nAnswer: 2 * 4 * 3 / 3 = 8\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\nAnswer: (4 * 3) * (3 - 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n3 * 2 = 6 (left: 6)\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15\nNot 24, let's rethink.\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 + 4 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n24/ 2 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1 = 12\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n24 / 3 = 8\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n15 + 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\n\nInput: 2 3 3 4\nSteps:\n3 / 3 = 1 (left: 1 2 4)\n4 * (1 + 2) = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 / 5\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n24 / 3\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n4 * 2 = 8\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n5 * 3 = 15\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 + 3 = 10 (left: 2 10)\n10 + 2\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / (3 - 2) = 12 (left: 12)\nNot working!\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 + 3\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n9 * 2 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 + 12 = 18\nNot 24, try again\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n3 + 6 = 9\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n9 + 8 = 17\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6\n\nInput: 2 3 3 4\nSteps:\n4 + 3 = 7 (left: 2 3 7)\n7 * 3 = 21 (left: 2 21)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n3 - 24\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n24 / 3 = 8\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n\nAnswer: (2 * 3) * (4 + 3) = 42\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n1 * 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n4 * 12 = 48\n\nInput: 2 3 3 4\nSteps:\n2 + 4 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n6 + 6 = 12\n\nInput: 2 3 3 4\nSteps:\n3 * 2 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n12 - 6\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 + 3 = 15 (left: 2 15)\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n12 + 6 = 18\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)\n3 * 4 = 12\nNot 24, keep trying\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 * 3 = 36 (left: 2 36)\n36 / 2\n\nInput: 2 3 3 4\nSteps:\n3 - 2 = 1 (left: 3 4 1)\n4 * 3 = 12 (left: 1 12)\n1 * 12 = 12\n\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n12 * 1\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 3 3 2)\n3 - 2 = 1 (left: 3 1)\n3 + 1 = 4\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n6 * 3\n\nInput: 2 3 3 4\nSteps:\n3 + 2 = 5 (left: 5 3 4)\n5 * 4 = 20 (left: 3 20)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n\nInput: 2 3 3 4\nSteps:\n4 + 2 = 6 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n\nInput: 2 3 3 4\nSteps:\n4 * 3 = 12 (left: 2 3 12)\n2 + 12 = 14 (left: 3 14)\nInput: 4 + 2 = 6\n3 / 3 = 1 (left: 1 6)\n6 * 1= 6\n\nInput: 2 3 3 4\nSteps:\n4 - 2 = 2 (left: 2 3 3)\n2 * 3 = 6 (left: 6 3)\n6 * 3 = 18\nInput: 2 3 3 4\nSteps:\n4 / 2 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n6 * 2 = 12\nAnswer: (4 - 2) * 3 * 3 = 18\n\nInput: 4 * 3 = 12\n(12 + 2)\n\nInput: 2 + 4=6\n\nAnswer: (4 + 2) * 3 = 18\n\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n24/ 3 = 8\nNot 24\nInput: 2 3 3 4\n\n(2 + 3+3)\nInput: 2 3 3 4\n\nAnswer:4*3 = 12\nInput: 2 3 3 4\n\n3/3 = 1\n4*1=4\nAnswer = 2\n\nInput: 2 3 3 4\n(4-3)*3\nInput: 2 3 3 4\nSteps:\n4 * 2 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 8 0)\n8 / 0\n\nAnswer = 0\n\nInput: 3 + 2 = 5\n5 + 4 + 3 -3\nAnswer\n(3 + 2)*(3 * 4) = 60\n15 /12 = 100\n\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\nAnswer: (2 * 3 * 4)\n\nInput: 2 3 3 4\nSteps:\n2 - 3\n3 * 4 - 12\n2 * 3 = 6\n6 + 4= 10\n\nInput: 2 3 3 4\nAnswer =3 + 3 + 2 + 4\n\nInput: 2 3 3 4\n2*3 = 6\n6 * 3 = 18\n18 + 4 = 22\n\nInput: 2 3 3 4\n2 + 3+4 = 9\n\nInput: 3 3 2 4\n\nsteps:\n\n3*3 = 9 (9 2 4)\n4+2 = 6 (9 6)\n9+6 = 15\n\nSteps: 2* 3* 4\n\nSteps\n23 2 4\n2*3 = 6\n4 + 6 = 10\n\nSteps\n2 + 3/ 3* 4= 1\n\nSteps:\n4*2= 8\n3 +3=6\n8+ 6= 14\nInput: 2 3 3 4\n\nInput: 2 3 3 4\n3 - 2 (\n\nInput: 4 * 3 = 12(\n12/ (\nInput: 3+2 = 5\n(input\n4 * 3\nAnswer\n*input (\n3/3= 1\n\nfinal input\n3 *4)*() = - - = /Answer: (6-4 ) / (* 42\n\n*input()\n25)*/ 10\nStep\n\nInput: 4* * ()()()* 8\n*\n\nFinal Answer\n\nInput: 42451. - *. - +\nFinal\nAnswer\n2;[x, ]/[[Input:*2444FinalAnswer](()/(9=;)*()/* 4.\n)\n*()\n\nAnswer =((()))*5+)/]\n\nInput():(6 =;)*()/* 6\nFinal\nAnsw\n2/(x)/\n\nInput(9\n);-3Final Answer\n33\n];(x\n)*\nInput1]\n[4-\n];[[Input:*53FinalAnswer]()/=;)((])x\n);()[]\n]]Final\n\n[FinalAnsw:9+3*4(50)*()*()(3[\n\n[Input *\n[Answer Final]]InputFinal\n\nFinal/3[]\n]\n((\nInput (]);Answer 2* Answer Input\n\nInput: (());()*5+3 FinalAnswer: -8)\n\n/Input():46 +*()6\nFinal.\n\nInput Final =0*\nAnsw\n\nFinalA.\nInput\n(*)*997)/];;[]()(()*//(*\n) (2*(\n\nInput()185Final=49*/+89)()-\n3)\n];=;)[]((xFinalAnsw\n\n[Input\n[2(47)23FinalAnswer+106]]1]\n(()*\n\nFinalIn/]/A)*Input\n\n];*;((Answer(Input()()/()*)035-8] =;)((\n*/4A3FinalFinalFinals Final+ 496\n\n*;((Answer(4]0];((]))=*+/) *7\n\n*(((Answer =414(\n\nInput 7\n\n=*4/*Final Answ=40]/);(()[]]\n\nAnswer Final73]\n((/Final 2(\nInputFinalA\n\nFinal*)*7*An\n\n*(*5An Final(32+(()*()\n\n]*In)*(*+FinalA);((\n\nAnswer:7*In)*(*(*]A\n\nFinal*(;Answer[Answer *+()/;[(*\n((*((//([FinalAn((FinalAnsw\n\n((*50010/333*()*++32*\n\n(()()()/;=*Answer:9+3*4((*(*+()/;((*()*\n((*5In)x));AnAn\n\n*(((((*Input\n*((((371))\n\n[FinalA\nInput(((*\n((*3*In0*)/*\n\n(((\n*((((\n*((((AnIn*3An3InA[30(((In+()A]))]*(((()*2*(((*\n3A(((++[]))(()(()\n*((*\n((*3*3*((()))]16\n\n*[]\n\nFinal(()(((2*52*\n\n((+(()An))()(((((((Final)[]\n\n[*(()))\n\n*]0]In(*\n[An))*A(()\n\n;(([()*\n\n;;=*Final4+(()Input\n\n4*2[[](()\n\n*2*\n\n/3In4;An(\n(((+Answer)*/[]Input*A+((()\n\nFinal(()/[])(/+*(()(()(*)/)*(()*1*()++((An+((())*((()\n\n)/3In*)A*)AIn)/2(()(()(*\n]Answer)[]])++[]]))\n((*2*24+*)((+(()\n\n/3+*A;))]))A\n*Input)(*);2(()\n\nAnAnswer)(*2]*);3(2+*/2(()()))))))))))\n\n))*)*))\n))*\nInput\n\n*;*)*/2(*);3()32++[]*3*)\n\n)\n*5++*))*))*+*)**))\n\n))*4(*\n(*An(()]))\n*(*)(*)\n\nInput(*5(*]\n(((]In)*\n(((()))\n\n(((]))\n\n))*++()))))*\n\n++An+InIn\n\n+In((((\n\n)43(*)(*/[\n((4([Input\n\n/*((*)/)\n((4([\n\n(((A[4444*)\n\n((An\n/]))[\n(In\n\n(/((*4(((/Final(5*()/)(2*34\n/]))()[]\n/Final)()))))(\n\n*/\n\nAnswer: 6\n\n```python\ndef solve():\n  nums = list(map(int, input().split()))\n  \n  def calculate(arr):\n    if len(arr) == 1:\n      return arr[0]\n    \n    results = []\n    for i in range(len(arr)):\n      for j in range(i + 1, len(arr)):\n        \n        a = arr[i]\n        b = arr[j]\n        \n        remaining = []\n        for k in range(len(arr)):\n          if k != i and k != j:\n            remaining.append(arr[k])\n        \n        \n        results.append(calculate(remaining + [a + b]))\n        results.append(calculate(remaining + [a - b]))\n        results.append(calculate(remaining + [b - a]))\n        results.append(calculate(remaining + [a * b]))\n        if b != 0:\n          results.append(calculate(remaining + [a / b]))\n        if a != 0:\n          results.append(calculate(remaining + [b / a]))\n\n    return results\n\n  possible_results = calculate(nums)\n\n  if 24 in possible_results:\n    print(\"Found 24\")\n  else:\n      print(\"Can't make 24\")\nsolve()\n```\n```python\ndef solve():\n    nums = list(map(int, input().split()))\n    \n    def find_expression(arr, target, expression):\n        if len(arr) == 1:\n            if abs(arr[0] - target) < 1e-6:\n                print(expression)\n                return True\n            else:\n                return False\n\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                a = arr[i]\n                b = arr[j]\n\n                remaining = []\n                for k in range(len(arr)):\n                    if k != i and k != j:\n                        remaining.append(arr[k])\n                \n                op1 = \"+\"\n                new_arr1 = remaining + [a + b]\n                new_expression1 = f\"({expression[i]} {op1} {expression[j]})\"\n                if find_expression(new_arr1, target, [new_expression1] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n\n                op2 = \"-\"\n                new_arr2 = remaining + [a - b]\n                new_expression2 = f\"({expression[i]} {op2} {expression[j]})\"\n                if find_expression(new_arr2, target, [new_expression2] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n\n                op3 = \"*\"\n                new_arr3 = remaining + [a * b]\n                new_expression3 = f\"({expression[i]} {op3} {expression[j]})\"\n                if find_expression(new_arr3, target, [new_expression3] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                  return True\n                \n                if abs(b) > 1e-6:\n                  op4 = \"/\"\n                  new_arr4 = remaining + [a / b]\n                  new_expression4 = f\"({expression[i]} {op4} {expression[j]})\"\n                  if find_expression(new_arr4, target, [new_expression4] + expression[0:i] + expression[i+1:j] + expression[j+1:]):\n                    return True\n                \n        return False\n\n    expression = [str(num) for num in nums]\n    if not find_expression(nums, 24, expression):\n        print(\"No solution found.\")\nsolve()\n```"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 55484,
            "prompt_tokens": 39008,
            "cost": 0.013349999999999999
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ]
            },
            {
                "step": 2,
                "x": "1 11 11 13",
                "ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ]
            },
            {
                "step": 3,
                "x": "1 11 11 13",
                "ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ],
                "new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nAnswer: 5 * (8 - 3) - 1 = 24\n"
                ]
            }
        ],
        "idx": 905,
        "ys": [
            "Steps:\n13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 + 1) * (13 - 11) = 24\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 + 1 = 10 (left: 10)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 3 = 5 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n2 * 3 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 1 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n48 / 3 = 16\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 + 3 = 6 (left: 1 6)\n6 * 1 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 1 = 7 (left: 3 5 7)\n7 + 5 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 + 1 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 * 3 = 12\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (1 + 3) = 2 (left: 2 5)\n5 * 2 = 10\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n1 * 5 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 8 15)\n15 + 8 = 23\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 + 3 = 8 (left: 1 8 8)\n8 * 8 = 64 (left: 1 64)\n64 / 1 = 64\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n3 * 8 = 24 (left: 4 24)\n24 / 4 = 6\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * 3 = 24 (left: 1 5 24)\n24 + 1 = 25 (left: 5 25)\n25 - 5 = 20\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 * (5 - 3) = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 - 1 = 4 (left: 3 4 8)\n8 + 4 = 12 (left: 3 12)\n12 * 3 = 36\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * (8 - 5) = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 + 5 = 8 (left: 1 8 8)\n8 + 8 = 16 (left: 1 16)\n16 + 1 = 17\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 / (5 - 3) = 4 (left: 1 4)\n4 - 1 = 3\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 + 8 = 23 (left: 1 23)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n1 + 8 = 9 (left: 9 15)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * 8 = 40 (left: 1 3 40)\n40 - 3 = 37 (left: 1 37)\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n24 * (5 - 1) = 96\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n8 - 5 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n9 - 1 = 8\nI am unable to reach 24.\n\nInput: 1 3 5 8\nSteps:\n5 * (8 - 3) = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: 5 * (8 - 3) - 1 = 24\nAnswer: 5 * (8 - 3) - 1 = 24\n"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 61687,
            "prompt_tokens": 43588,
            "cost": 0.014886299999999998
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\n"
                ]
            },
            {
                "step": 1,
                "x": "1 8 10 11",
                "ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ]
            },
            {
                "step": 2,
                "x": "1 8 10 11",
                "ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ]
            },
            {
                "step": 3,
                "x": "1 8 10 11",
                "ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ],
                "new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
                ]
            }
        ],
        "idx": 906,
        "ys": [
            "Steps:\n10 - 8 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n22 + 1 = 23 (left: 23)\n\nThis is not 24, let's try a different approach\n\nSteps:\n8 + 10 = 18 (left: 1 11 18)\n18 + 11 = 29 (left: 1 29)\n\nThis is not 24, let's try a different approach\n\nSteps:\n10 - 1 = 9 (left: 8 9 11)\n8 + 11 = 19 (left: 9 19)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n12 + 10 = 22 (left: 8 22)\n\nThis is not 24, let's try a different approach\n\nSteps:\n11 - 10 = 1 (left: 1 8)\n1 + 8 = 9\n\nThis is not 24, let's try a different approach\nSteps:\n8 / (1 - 10/11) = 8 / (1/11) = 88\nThis is not 24\n\nSteps:\n10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n\nThis is not 24\n\nSteps:\n11 + 1 = 12 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24\n\nAnswer: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\nANSWER: (11 + 1) * (10 - 8) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 65970,
            "prompt_tokens": 47345,
            "cost": 0.016066
        }
    }
]